@section #booleans
  @category.theory
    𝔹 : 1 → Type

    true  : 1 → 𝔹
    false : 1 → 𝔹

    [true, false] : 1 + 1 → 𝔹

  @type.theory

    ————————
    𝔹 : Type

    —————————
    false : 𝔹

    ————————
    true : 𝔹


    P : 𝔹 → Type    b : 𝔹    e₀ : P true    e₁ : P true
    ——————————————————————————————————————————————————————
            𝔹-elimination P b e₀ e₁ : P x
    
    —————————————————————————————————
    (𝔹-elimination P true e₀ e₁) ⇒ e₀

    ——————————————————————————————————
    (𝔹-elimination P false e₀ e₁) ⇒ e₁

@section #natural.numbers
  @category.theory
    ℕ : 1 → Type

    zero : 1 → ℕ
    successor : ℕ → ℕ

    [zero, successor] : 1 + ℕ → ℕ

  @type.theory

    ————————
    ℕ : Type

    ————————
    zero : ℕ

      n : ℕ
    —————————————————
    (successor n) : ℕ

    P : ℕ → Type    n : ℕ    e₀ : P zero
    e₁ : (k : ℕ) → (P k) → (P (successor k))
    ————————————————————————————————————————
       ℕ-elimination P k e₀ e₁ : P k

    —————————————————————————————————
    (ℕ-elimination P zero e₀ e₁) ⇒ e₀
    
    ——————————————————————————————————————————————————————————————————————
    (ℕ-elimination P (successor k) P e₀ e₁) ⇒ e₁ k (ℕ-elimination k e₀ e₁)

@section #optional
  @category.theory
    Optional : Type → Type

    nothing : 1 → Optional A
    some : A → Optional A

    [nothing, some] : 1 + A → Optional A

  @type.theory

         A : Type
    ———————————————————
    (Optional A) : Type


    A : Type    (Optional A) : Type
    ———————————————————————————————
      (nothing A) : (Optional A)

    A : Type    (Optional A) : Type    x : A
    —————————————————————————————————————————
           (some A x) : (Optional A)


    A : Type    P : (Optional A) → Type    opt : (Optional A)
        e₀ : (P nothing)     e₁ : (x : A) → P (some x)
    —————————————————————————————————————————————————————————
         (Optional-elimination A P x e₀ e₁) : (P opt)

    
    —————————————————————————————————————————————
    (Optional-elimination A P nothing e₀ e₁) ⇒ e₀ 

    ————————————————————————————————————————————————
    (Optional-elimination A P (some x) e₀ e₁) ⇒ e₁ x


@section #either
  @category.theory
    Either : Type × Type → Type
    left : A → Either (A, B)
    right : B → Either (A, B)

    [left, right] : A + B → Either (A, B)

  @type.theory

    A : Type    B : Type
    ————————————————————
    (Either A B) : Type

    A : Type    B : Type    (Either A B) : Type
                  x : A
    ————————————————————————————————————————
        (left A B x) : (Either A B)

        A : Type    B : Type
    (Either A B) : Type    y : B
    ————————————————————————————
    (right A B y) : (Either A B)


       A : Type    B : Type    P : (Either A B) → Type
                   etr : (Either A B)
    e₀ : (x : A) → P (left x)    e₁ : (y : B) → P (right y)
    ————————————————————————————————————————————————————————
      (Either-elimination A B P etr) : (P etr)

    —————————————————————————————————————————
    (Either-elimination A B P (left x) ⇒ e₀ x

    ——————————————————————————————————————————
    (Either-elimination A B P (right y) ⇒ e₁ y
      
@section #lists
  @category.theory
    List : Type → Type

    nil : 1 → List A
    link : α × (List A) → List A

    [nil, link] : 1 + A × (List A) → List A

  @type.theory
      A : Type
    ——————————————
    (List A) : Type

    A : Type    (List A) : Type
    ——————————————————————————
       (nil A) : (List A)

    A : Type    (List A) : Type
      x : A    xs : (List A)
    ————————————————————————————
      (link A x xs) : (List A)

    A : Type    P : (List A) → Type    lst : (List A)    e₀ : P (nil A)
        e₁ : (x : A) → (xs : (List A)) → (P xs) → (P (link A x xs))
    ————————————————————————————————————————————————————————————————————
        (List-elimination A P lst e₀ e₁) : (P lst)

    —————————————————————————————————————————
    (List-elimination A P (nil A) e₀ e₁) ⇒ e₀

    —————————————————————————————————————————————
    (List-elimination A P (link A x xs) e₀ e₁)
        ⇒ e₁ x xs (List-elimination A P e₀ e₁ xs)
